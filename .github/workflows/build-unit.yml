on:
  workflow_dispatch:
  push:
    branches:
      - upgrade-2025
    paths:
      - ".github/workflows/build-unit.yml"

jobs:
  build-php-unit:
    runs-on: ${{ matrix.arch.os }} 
    strategy:
      fail-fast: true
      matrix:
        arch:
          - os: ubuntu-22.04
            arch: amd64
          - os: ubuntu-22.04-arm
            arch: arm64
        php_version:
          - "8.1"
          - "8.2"
          - "8.3"
          # - "8.4"
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          submodules: true
      
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
        with:
          install: true
      
      - name: Login to GHCR
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: cloudynes
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Prepare Dockerfiles for Debian
        run: |
          cd nginx-unit/nginx-unit
          git apply -v --ignore-space-change --ignore-whitespace --ignore-cr-at-eol ../nginx-unit.patch
          cd ../../
      
      - name: Build Alpine Image
        uses: docker/build-push-action@v6
        with:
          context: nginx-unit
          file: nginx-unit/Dockerfile
          push: true
          cache-from: type=gha
          cache-to: type=gha,mode=max
          build-args: |
            SOURCE_VERSION=${{ matrix.php_version }}
          tags: |
            ghcr.io/cloudynes/nginx-unit:${{ matrix.php_version }}-alpine-${{ matrix.arch.arch }}
      
      - name: Build Debian Image
        uses: docker/build-push-action@v6
        with:
          context: nginx-unit/nginx-unit/pkg/docker
          file: nginx-unit/nginx-unit/pkg/docker/Dockerfile.php8.4
          push: true
          cache-from: type=gha
          cache-to: type=gha,mode=max
          build-args: |
            SOURCE_VERSION=${{ matrix.php_version }}
          tags: |
            ghcr.io/cloudynes/nginx-unit:${{ matrix.php_version }}-debian-${{ matrix.arch.arch }}

  combine:
    runs-on: ubuntu-latest
    needs: build-php-unit
    strategy:
      fail-fast: true
      matrix:
        php_version:
          - "8.1"
          - "8.2"
          - "8.3"
          # - "8.4"
    steps:
      - uses: actions/checkout@v4

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
        with:
          platforms: linux/amd64,linux/arm64
      
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
        with:
          install: true
      
      - name: Login to GHCR
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: cloudynes
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          registry: docker.io
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      
      - name: Login to Azure Container Registry
        uses: docker/login-action@v3
        with:
          registry: ${{ secrets.AZURECR_URL }}
          username: ${{ secrets.AZURECR_USER }}
          password: ${{ secrets.AZURECR_SECRET }}
      
      - uses: int128/docker-manifest-create-action@v2
        name: Create manifest for debian
        with:
          tags: |
            ghcr.io/cloudynes/php-unit:${{ matrix.php_version }}-debian
            cloudyne/php-unit:${{ matrix.php_version }}-debian
            cloudyne.azurecr.io/php-unit:${{ matrix.php_version }}-debian
          sources: |
            ghcr.io/cloudynes/php-unit:${{ matrix.php_version }}-debian-amd64
            ghcr.io/cloudynes/php-unit:${{ matrix.php_version }}-debian-arm64
          push: true

      - uses: int128/docker-manifest-create-action@v2
        name: Create manifest for alpine
        with:
          tags: |
            ghcr.io/cloudynes/php-unit:${{ matrix.php_version }}-alpine
            cloudyne/php-unit:${{ matrix.php_version }}-alpine
            cloudyne.azurecr.io/php-unit:${{ matrix.php_version }}-alpine
          sources: |
            ghcr.io/cloudynes/php-unit:${{ matrix.php_version }}-alpine-amd64
            ghcr.io/cloudynes/php-unit:${{ matrix.php_version }}-alpine-arm64
          push: true

