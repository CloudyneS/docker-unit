on:
    pull_request:
    workflow_dispatch:
        inputs:
            build_all:
              description: "Build all images for this PHP Version (ARM64)"
              type: boolean
              default: false

            container_base:
                description: "The base image to use"
                type: choice
                default: "alpine"
                options:
                    - debian
                    - alpine
            
            container_image:
                type: choice
                default: "php-bedrock"
                description: "The image to build"
                options:
                    - php-extended
                    - php-unit
                    - php-bedrock
                    - php-laravel
                    - php-bookstack
                    - php-itop
            
            php_version:
                description: "The PHP Version to use"
                type: choice
                default: "8.1"
                options:
                    - "8.1"
                    - "8.2"
                    - "8.3"
jobs:
    build-alpine-extended:
        if: github.event.inputs.container_base == 'alpine' && github.event.inputs.container_image == 'php-extended'
        runs-on: ubuntu-latest-arm64
        steps:
          - name: Checkout
            uses: actions/checkout@v2

          - name: Set up QEMU
            uses: docker/setup-qemu-action@v2
          
          - name: Set up Docker Buildx
            uses: docker/setup-buildx-action@v2
          
          - name: Login to GHCR
            uses: docker/login-action@v2
            with:
              registry: ghcr.io
              username: cloudynes
              password: ${{ secrets.GITHUB_TOKEN }}
    
          - name: Login to Docker Hub
            uses: docker/login-action@v2
            with:
              registry: docker.io
              username: ${{ secrets.DOCKERHUB_USERNAME }}
              password: ${{ secrets.DOCKERHUB_TOKEN }}
          
          - name: Login to Azure Container Registry
            uses: docker/login-action@v2
            with:
              registry: ${{ secrets.AZURECR_URL }}
              username: ${{ secrets.AZURECR_USER }}
              password: ${{ secrets.AZURECR_SECRET }}
          
          - name: Prepare Dockerfiles
            run: |
              cd alpine/php-extended
              bash make-dockerfiles.sh
              cd ..
          
          - name: Build Image (${{ github.event.inputs.php_version }})
            uses: docker/build-push-action@v5
            with:
              context: ./${{ github.event.inputs.container_base }}/${{ github.event.inputs.container_image }}/php-alpine-original/${{ github.event.inputs.php_version }}/alpine3.19/cli
              file: ./${{ github.event.inputs.container_base }}/${{ github.event.inputs.container_image }}/php-alpine-original/${{ github.event.inputs.php_version }}/alpine3.19/cli/Dockerfile
              push: true
              platforms: linux/arm64,linux/amd64
              tags: |
                ghcr.io/cloudynes/${{ github.event.inputs.container_image }}:${{ github.event.inputs.php_version }}-${{ github.event.inputs.container_base }}
                cloudyne/${{ github.event.inputs.container_image }}:${{ github.event.inputs.php_version }}-${{ github.event.inputs.container_base }}
                cloudyne.azurecr.io/${{ github.event.inputs.container_image }}:${{ github.event.inputs.php_version }}-${{ github.event.inputs.container_base }}
          

    debian-build-all:
      if: github.event.inputs.build_all && github.event.inputs.container_base == 'xdebian'
      runs-on: ubuntu-latest
      steps:
        - name: Checkout
          uses: actions/checkout@v2
  
        - name: Set up QEMU
          uses: docker/setup-qemu-action@v2
        
        - name: Set up Docker Buildx
          uses: docker/setup-buildx-action@v2
        
        - name: Login to GHCR
          uses: docker/login-action@v2
          with:
            registry: ghcr.io
            username: cloudynes
            password: ${{ secrets.GITHUB_TOKEN }}
  
        - name: Login to Docker Hub
          uses: docker/login-action@v2
          with:
            registry: docker.io
            username: ${{ secrets.DOCKERHUB_USERNAME }}
            password: ${{ secrets.DOCKERHUB_TOKEN }}
        
        - name: Login to Azure Container Registry
          uses: docker/login-action@v2
          with:
            registry: ${{ secrets.AZURECR_URL }}
            username: ${{ secrets.AZURECR_USER }}
            password: ${{ secrets.AZURECR_SECRET }}

        - name: Build and push php-extended:${{ github.event.inputs.php_version }}-debian
          uses: docker/build-push-action@v2
          with:
            context: ./debian/php-extended
            file: ./debian/php-extended/Dockerfile
            push: true
            build-args:
              SOURCE_VERSION=${{ github.event.inputs.php_version }}
            tags: |
              ghcr.io/cloudynes/php-extended:${{ github.event.inputs.php_version }}-debian
              cloudyne/php-extended:${{ github.event.inputs.php_version }}-debian
              cloudyne.azurecr.io/php-extended:${{ github.event.inputs.php_version }}-debian

        - name: Build and push php-unit:${{ github.event.inputs.php_version }}-debian
          uses: docker/build-push-action@v2
          with:
            context: ./debian/php-unit
            file: ./debian/php-unit/Dockerfile
            push: true
            build-args:
              SOURCE_VERSION=${{ github.event.inputs.php_version }}
            tags: |
              ghcr.io/cloudynes/php-unit:${{ github.event.inputs.php_version }}-debian
              cloudyne/php-unit:${{ github.event.inputs.php_version }}-debian
              cloudyne.azurecr.io/php-unit:${{ github.event.inputs.php_version }}-debian
        
        - name: Build and push php-bedrock:${{ github.event.inputs.php_version }}-debian
          uses: docker/build-push-action@v2
          with:
            context: ./debian/php-bedrock
            file: ./debian/php-bedrock/Dockerfile
            push: true
            platforms: linux/arm64,linux/amd64
            build-args:
              SOURCE_VERSION=${{ github.event.inputs.php_version }}
            tags: |
              ghcr.io/cloudynes/php-bedrock:${{ github.event.inputs.php_version }}-debian
              cloudyne/php-bedrock:${{ github.event.inputs.php_version }}-debian
              cloudyne.azurecr.io/php-bedrock:${{ github.event.inputs.php_version }}-debian
    

    build:
        if: github.event.inputs.container_base == 'alpine' && github.event.inputs.container_image != 'php-extended'
        runs-on: ubuntu-latest
        steps:
          - name: Checkout
            uses: actions/checkout@v2
    
          - name: Set up QEMU
            uses: docker/setup-qemu-action@v2
          
          - name: Set up Docker Buildx
            uses: docker/setup-buildx-action@v2
          
          - name: Login to GHCR
            uses: docker/login-action@v2
            with:
              registry: ghcr.io
              username: cloudynes
              password: ${{ secrets.GITHUB_TOKEN }}
    
          - name: Login to Docker Hub
            uses: docker/login-action@v2
            with:
              registry: docker.io
              username: ${{ secrets.DOCKERHUB_USERNAME }}
              password: ${{ secrets.DOCKERHUB_TOKEN }}
          
          - name: Login to Azure Container Registry
            uses: docker/login-action@v2
            with:
              registry: ${{ secrets.AZURECR_URL }}
              username: ${{ secrets.AZURECR_USER }}
              password: ${{ secrets.AZURECR_SECRET }}

          - name: Build and push ${{ github.event.inputs.container_image }}:${{ github.event.inputs.php_version }}-${{ github.event.inputs.container_base }}
            uses: docker/build-push-action@v5
            with:
                # cache-from: type=registry,ref=ghcr.io/cloudynes/${{ github.event.inputs.container_image }}:cache-${{ github.event.inputs.php_version }}
                # cache-to: type=registry,ref=ghcr.io/cloudynes/${{ github.event.inputs.container_image }}:cache-${{ github.event.inputs.php_version }}
                context: ./${{ github.event.inputs.container_base }}/${{ github.event.inputs.container_image }}
                file: ./${{ github.event.inputs.container_base }}/${{ github.event.inputs.container_image }}/Dockerfile
                platforms: linux/arm64,linux/amd64
                push: true
                build-args: |
                    SOURCE_VERSION=${{ github.event.inputs.php_version }}
                tags: |
                    ghcr.io/cloudynes/${{ github.event.inputs.container_image }}:${{ github.event.inputs.php_version }}-${{ github.event.inputs.container_base }}
                    cloudyne/${{ github.event.inputs.container_image }}:${{ github.event.inputs.php_version }}-${{ github.event.inputs.container_base }}
                    cloudyne.azurecr.io/${{ github.event.inputs.container_image }}:${{ github.event.inputs.php_version }}-${{ github.event.inputs.container_base }}
